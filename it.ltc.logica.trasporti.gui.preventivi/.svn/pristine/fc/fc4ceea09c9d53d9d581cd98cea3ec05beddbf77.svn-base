package it.ltc.logica.trasporti.gui.preventivi.wizards.esistenti;

import java.util.Date;

import org.eclipse.jface.wizard.IWizardPage;
import org.eclipse.swt.SWT;
import org.eclipse.swt.events.SelectionAdapter;
import org.eclipse.swt.events.SelectionEvent;
import org.eclipse.swt.layout.GridData;
import org.eclipse.swt.layout.GridLayout;
import org.eclipse.swt.widgets.Button;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Table;
import org.eclipse.swt.widgets.TableColumn;

import it.ltc.logica.database.model.centrale.Commessa;
import it.ltc.logica.database.model.centrale.Corriere;
import it.ltc.logica.database.model.centrale.Nazione;
import it.ltc.logica.database.model.centrale.ServizioCorriere;
import it.ltc.logica.gui.container.PaginaWizardRisultati;
import it.ltc.logica.trasporti.controller.PreventivoEsistentiController;
import it.ltc.logica.trasporti.controller.SpedizioniController;
import it.ltc.logica.trasporti.gui.elements.spedizione.TabellaCheckBoxSpedizioni;
import it.ltc.logica.trasporti.gui.elements.spedizionestorica.TabellaCheckBoxSpedizioneStorica;

public class PreventivoSpedizioniEsistentiSelezioneSpedizioniWizardPage extends PaginaWizardRisultati {
	
	private static final String titolo = "Preventivo di costo e fatturazione per spedizioni gi\u00E0 esistenti";
	private static final String descrizione = "Seleziona una o pi\u00F9 spedizioni gi\u00E0 effettuate per vedere quanto sarebbero costate.";
	
	private PreventivoEsistentiController controllerPreventivo;
	private SpedizioniController controllerSpedizioni;
	
	private TabellaCheckBoxSpedizioneStorica checkboxTableViewer;
	private Table table;
	
	private boolean canFlip;

	public PreventivoSpedizioniEsistentiSelezioneSpedizioniWizardPage() {
		super(titolo, descrizione);
		controllerSpedizioni = SpedizioniController.getInstance();
		controllerPreventivo = PreventivoEsistentiController.getInstance();
		canFlip = false;
	}
	
	private void valida() {
		canFlip = checkboxTableViewer.getCheckedElements().length > 0;
		setPageComplete(canFlip);
	}
	
	@Override
	public boolean canFlipToNextPage() {
		return canFlip;
	}
	
	@Override
	public IWizardPage getNextPage() {
		Object[] spedizioniSelezionate = checkboxTableViewer.getCheckedElements();
		controllerPreventivo.setSpedizioniSelezionate(spedizioniSelezionate);
		return super.getNextPage();
	}

	@Override
	public void aggiungiElementiGrafici(Composite container) {
		container.setLayout(new GridLayout(1, false));
		
		checkboxTableViewer = new TabellaCheckBoxSpedizioneStorica(container, TabellaCheckBoxSpedizioni.TIPO_SEMPLICE);
		
		table = checkboxTableViewer.getTable();
		table.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true, 1, 1));
		table.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				valida();
			}
		});
		
		Composite compositeSelezione = new Composite(container, SWT.NONE);
		compositeSelezione.setLayoutData(new GridData(SWT.FILL, SWT.CENTER, true, false, 1, 1));
		compositeSelezione.setLayout(new GridLayout(2, false));
		
		Button btnSelezionaTutte = new Button(compositeSelezione, SWT.NONE);
		btnSelezionaTutte.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				checkboxTableViewer.setAllChecked(true);
				valida();
			}
		});
		btnSelezionaTutte.setText("Seleziona tutte");
		
		Button btnDeselezionaTutte = new Button(compositeSelezione, SWT.NONE);
		btnDeselezionaTutte.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				checkboxTableViewer.setAllChecked(false);
				valida();
			}
		});
		btnDeselezionaTutte.setText("Deseleziona tutte");
	}

	@Override
	public void mostraRisultato() {
		Commessa commessaSelezionata = controllerPreventivo.getCommessa();
		Corriere corriere = controllerPreventivo.getCorriere();
		ServizioCorriere servizio = controllerPreventivo.getServizio();
		Nazione nazione = controllerPreventivo.getNazione();
		Boolean contrassegno = controllerPreventivo.getContrassegno();
		Date da = controllerPreventivo.getDataDa();
		Date a = controllerPreventivo.getDataA();
		checkboxTableViewer.setInput(controllerSpedizioni.getListaSpedizioniStoriche(commessaSelezionata, da, a, contrassegno, corriere, servizio, nazione));
		for (TableColumn column : table.getColumns()) {
			column.pack();
		}
	}
	
}
