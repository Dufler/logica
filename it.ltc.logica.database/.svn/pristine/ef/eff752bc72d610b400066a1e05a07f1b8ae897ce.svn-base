package it.ltc.logica.database.model;

import java.util.LinkedList;
import java.util.List;

import it.ltc.logica.database.configuration.ConfigurationManager;
import it.ltc.logica.database.orm.ColumnList;
import it.ltc.logica.database.orm.Entity;
import it.ltc.logica.database.orm.EntityManager;

public class TipoContrassegno extends Entity {

	public static final String NOME_TABELLA = "spedizione_contrassegno_tipo";
	private static final ColumnList variabili = new ColumnList();
	
	private static final EntityManager<TipoContrassegno> manager = new EntityManager<TipoContrassegno>(TipoContrassegno.class, ConfigurationManager.getDefault());
	private static final LinkedList<TipoContrassegno> listaTipiContrassegno = new LinkedList<TipoContrassegno>();
	
	private String codice;
	private String nome;

	@Override
	public String getNomeTabella() {
		return NOME_TABELLA;
	}

	@Override
	public ColumnList getVariabili() {
		if (variabili.isEmpty()) {
			variabili.addString("codice", "codice", true, false);
			variabili.addString("nome", "nome");
		}
		return variabili;
	}
	
	public String toString() {
		return nome;
	}
	
	public boolean equals(Object o) {
		boolean uguali = false;
		if (o != null && o instanceof TipoContrassegno) {
			TipoContrassegno tipo = (TipoContrassegno) o;
			uguali = tipo.getCodice().equals(codice);
		}
		return uguali;
	}

	public String getCodice() {
		return codice;
	}

	public void setCodice(String codice) {
		this.codice = codice;
	}

	public String getNome() {
		return nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	public static List<TipoContrassegno> getTipiContrassegno() {
		if (listaTipiContrassegno.isEmpty()) {
			listaTipiContrassegno.addAll(manager.getEntities());
		}
		return listaTipiContrassegno;
	}
	
	public static TipoContrassegno getTipoContrassegno(String codice) {
		TipoContrassegno tipo = null;
		for (TipoContrassegno t : getTipiContrassegno()) {
			if (t.getCodice().equals(codice)) {
				tipo = t;
				break;
			}
		}
		return tipo;
	}

}
