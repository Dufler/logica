package it.ltc.logica.database.model.centrale;

import java.util.List;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

import it.ltc.logica.database.configuration.ConfigurationManager;
import it.ltc.logica.database.orm.ColumnList;
import it.ltc.logica.database.orm.Entity;
import it.ltc.logica.database.orm.EntityManager;

@JsonIgnoreProperties(ignoreUnknown=true)
public class Brand extends Entity {

	@JsonIgnore
	public static final String NOME_TABELLA = "brand";
	@JsonIgnore
	private static final ColumnList variabili = new ColumnList();
	
	@JsonIgnore
	private static List<Brand> brand;
	@JsonIgnore
	private static final EntityManager<Brand> manager = new EntityManager<Brand>(Brand.class, ConfigurationManager.getDefault());

	
	private Integer id;
	private String nome;
	private String descrizione;
	
	@Override
	public String getNomeTabella() {
		return NOME_TABELLA;
	}

	@Override
	public ColumnList getVariabili() {
		if (variabili.isEmpty()) {
			variabili.addDefaultIDColumn();
			variabili.addString("nome", "nome");
			variabili.addString("descrizione", "descrizione");
		}
		return variabili;
	}
	
	@Override
	public String toString() {
		return nome;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Brand other = (Brand) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		return true;
	}

	public static List<Brand> getBrands() {
		if (brand == null) {
			brand = manager.getEntities();
		}
		return brand;
	}
	
	public static Brand getBrand(String nome) {
		Brand brand = null;
		for (Brand b : getBrands()) {
			if (b.getNome().equalsIgnoreCase(nome)) {
				brand = b;
				break;
			}
		}
		return brand;
	}

	public Integer getId() {
		return id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public String getNome() {
		return nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	public String getDescrizione() {
		return descrizione;
	}

	public void setDescrizione(String descrizione) {
		this.descrizione = descrizione;
	}

}
