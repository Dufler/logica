package it.ltc.logica.database.model.centrale;

import it.ltc.logica.database.orm.ColumnList;
import it.ltc.logica.database.orm.Entity;
import it.ltc.logica.database.orm.ValidEntity;
import it.ltc.logica.database.orm.ValidationResult;

public class VoceDiListinoCorriereProporzionale extends Entity implements ValidEntity {

	public static final String NOME_TABELLA = "listino_corriere_voce_proporzionale";
	private static final ColumnList variabili = new ColumnList();
	
	private Integer id;
	private Double valore;
	private String tipo;
	private Double minimo;
	private Double massimo;
	
	@Override
	public String getNomeTabella() {
		return NOME_TABELLA;
	}

	@Override
	public ColumnList getVariabili() {
		if (variabili.isEmpty()) {
			variabili.addInt("id_voce", "id", true, false);
			variabili.addDouble("valore", "valore");
			variabili.addString("tipo", "tipo");
			variabili.addDouble("minimo", "minimo");
			variabili.addDouble("massimo", "massimo");
		}
		return variabili;
	}
	
	@Override
	public ValidationResult validate() {
		ValidationResult esito = ValidationResult.getValidResult();
		if (valore == null || valore < 0) {
			esito.setValid(false);
			esito.addMessage("Il valore deve essere maggiore di 0.");
		}
		if (tipo == null || tipo.isEmpty()) {
			esito.setValid(false);
			esito.addMessage("Il tipo di proporzionalit\u00E0 deve essere valido.");
		}
		return esito;
	}

	public Integer getId() {
		return id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public Double getValore() {
		return valore;
	}

	public void setValore(Double valore) {
		this.valore = valore;
	}

	public String getTipo() {
		return tipo;
	}

	public void setTipo(String tipo) {
		this.tipo = tipo;
	}

	public Double getMinimo() {
		return minimo;
	}

	public void setMinimo(Double minimo) {
		this.minimo = minimo;
	}

	public Double getMassimo() {
		return massimo;
	}

	public void setMassimo(Double massimo) {
		this.massimo = massimo;
	}

}
