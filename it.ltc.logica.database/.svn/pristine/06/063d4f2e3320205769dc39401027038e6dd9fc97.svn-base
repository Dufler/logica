package it.ltc.logica.database.model.centrale.utenti;

import java.util.LinkedList;
import java.util.List;

import com.fasterxml.jackson.annotation.JsonIgnore;

import it.ltc.logica.database.configuration.ConfigurationManager;
import it.ltc.logica.database.orm.ColumnList;
import it.ltc.logica.database.orm.Entity;
import it.ltc.logica.database.orm.EntityManager;

public class UtenteFeaturesJoin extends Entity {
	
	@JsonIgnore
	public static final String NOME_TABELLA = "utente_features_join";
	@JsonIgnore
	private static final ColumnList variabili = new ColumnList();
	@JsonIgnore
	private static final EntityManager<UtenteFeaturesJoin> manager = new EntityManager<UtenteFeaturesJoin>(UtenteFeaturesJoin.class, ConfigurationManager.getDefault());
	
	private String utente;
	private String feature;

	@Override
	public String getNomeTabella() {
		return NOME_TABELLA;
	}

	@Override
	public ColumnList getVariabili() {
		if (variabili.isEmpty()) {
			variabili.addString("utente", "utente", true, false);
			variabili.addString("feature", "feature", true, false);
		}
		return variabili;
	}
	
	@Override
	public String toString() {
		return "UtenteFeaturesJoin [utente=" + utente + ", Feature=" + feature + "]";
	}
	
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((feature == null) ? 0 : feature.hashCode());
		result = prime * result + ((utente == null) ? 0 : utente.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		UtenteFeaturesJoin other = (UtenteFeaturesJoin) obj;
		if (feature == null) {
			if (other.feature != null)
				return false;
		} else if (!feature.equals(other.feature))
			return false;
		if (utente == null) {
			if (other.utente != null)
				return false;
		} else if (!utente.equals(other.utente))
			return false;
		return true;
	}

	public static List<String> getFeatures(String username) {
		UtenteFeaturesJoin filtro = new UtenteFeaturesJoin();
		filtro.setUtente(username);
		List<UtenteFeaturesJoin> listaFeatures = manager.getEntities(filtro);
		List<String> features = new LinkedList<>();
		for (UtenteFeaturesJoin upj : listaFeatures) {
//			Feature feature = Feature.getFeature(upj.getFeature());
//			if (feature != null)
//				features.add(feature);
			features.add(upj.getFeature());
		}
		return features;
	}

	public String getUtente() {
		return utente;
	}

	public void setUtente(String utente) {
		this.utente = utente;
	}

	public String getFeature() {
		return feature;
	}

	public void setFeature(String feature) {
		this.feature = feature;
	}
	
}
