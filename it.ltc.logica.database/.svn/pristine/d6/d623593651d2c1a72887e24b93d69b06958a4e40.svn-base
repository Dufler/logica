package it.ltc.logica.database.configuration;

import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;

public class SQLite extends DBMS {
	
	private static final String ENABLE_FK_QUERY = "PRAGMA foreign_keys = ON;";

	private final File dbFolderPath;
	private final File dbPath;
	private final String dbName = "logica.db";

	private final String dateFormat = "yyyy-MM-dd HH:mm:ss.SSS";
	private final String dbms = "sqlite";

	public SQLite(Database db) {
		super(db);
		dbFolderPath = new File(System.getProperty("user.dir") + System.getProperty("file.separator") + "db" + System.getProperty("file.separator"));
		dbPath = new File(System.getProperty("user.dir") + System.getProperty("file.separator") + "db" + System.getProperty("file.separator") + dbName);
	}

	public File getDBFolderPath() {
		return dbFolderPath;
	}

	public String getConnectionURL() {
		String connectionURL = "jdbc:" + dbms + ":" + dbPath.getAbsolutePath();
		return connectionURL;
	}

	@Override
	public Connection getConnection() {
		Connection connection = null;
		try {
			connection = DriverManager.getConnection(getConnectionURL());
			PreparedStatement statement = connection.prepareStatement(ENABLE_FK_QUERY);
			statement.execute();
		} catch (SQLException e) {
			System.out.println(e.getMessage());
		}
		return connection;
	}

	@Override
	public Connection getTransactionConnection() {
		Connection connection = getConnection();
		return connection;
	}

	@Override
	public String getDefaultDateFormat() {
		return dateFormat;
	}

	@Override
	public DBMSType getType() {
		return DBMSType.SQLITE;
	}

	@Override
	public boolean checkConnectionValidity(Connection connection) {
		boolean valid = true;
		try {
			if (connection == null || connection.isClosed() || !connection.isValid(1)) {
				valid = false;
			}
		} catch (SQLException e) {
			valid = false;
			e.printStackTrace();
		}
		return valid;
	}

}
