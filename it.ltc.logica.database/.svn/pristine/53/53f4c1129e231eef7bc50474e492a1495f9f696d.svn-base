package it.ltc.logica.database.model.sqlserver.cliente;

import it.ltc.logica.database.orm.Column;
import it.ltc.logica.database.orm.ColumnList;
import it.ltc.logica.database.orm.Compare;
import it.ltc.logica.database.orm.Type;

public class TestaCorrsr extends TestaCorr {
	
	@Override
	public String getNomeTabella() {
		return "dbo.TestaCorrsr";
	}
	
private static final ColumnList variabili = new ColumnList();
	
	@Override
	public ColumnList getVariabili() {
		if (variabili.isEmpty()) {
			variabili.addAutoincrement("IdTestaCor", "id");
			variabili.addInt("AnnoSpe", "annoSpedizione");
			variabili.addInt("DataSpe", "dataSpedizione");
			variabili.addInt("NrSerie", "numeroSerie");
			variabili.addInt("NrSpedi", "numeroSpedizione");
			variabili.addString("CodBolla", "codiceBolla");
			variabili.addString("RagSocDest", "ragioneSocialeDestinatario");
			variabili.addString("RagSocEst", "estensioneRagioneSocialeDestinatario");
			variabili.addString("indirizzo", "Indirizzo");
			variabili.addString("cap", "Cap");
			variabili.addString("Localita", "località");
			variabili.addString("provincia", "Provincia");
			variabili.addString("Nazione", "nazione");
			variabili.addString("Chiusura1", "primoGiornoChiusura");
			variabili.addString("Chiusura2", "secondoGiornoChiusura");
			variabili.addString("Servizio", "tipoServizioBolle");
			variabili.addDouble("ImpoAss", "importoDaAssicurare");
			variabili.addString("ValutaAss", "divisaImportoDaAssicurare");
			variabili.addString("NatMer", "naturaMerceMittente");
			variabili.addInt("NrColli", "colli");
			variabili.addDouble("Peso", "pesoKgBollettato");
			variabili.addDouble("Volume", "volumeBollettato");
			variabili.addDouble("QtaFatt", "quantitàDaFatturare");
			variabili.addDouble("Contrassegno", "contrassegno");
			variabili.addString("TipoIncasso", "tipoIncassoContrassegno");
			variabili.addString("ValutaIncasso", "divisaImportoAssegno");
			variabili.addString("Particolarita", "gestioneParticolarità");
			variabili.addInt("MittenteNum", "riferimentoMittenteNumerico");
			variabili.addString("MittenteAlfa", "riferimentoMittenteAlfabetico");
			variabili.addInt("NrSegnaIniz", "numeroSegnacolloDAL");
			variabili.addInt("NrSegnaFin", "numeroSegnacolloAL");
			variabili.addString("Descrizione1", "descrizioneNote");
			variabili.addString("Descrizione2", "descrizioneNoteAggiuntive");
			variabili.addInt("ZonaCons", "zonaConsegna");
			variabili.addString("TraMerce", "codiceTrattamentoMerce");
			variabili.addString("FermoDep", "fermoDeposito");
			variabili.addInt("DataConsegna", "dataConsegnaRichiesta");
			variabili.addString("TipoCons", "tipoConsegnaRichiesta");
			variabili.addInt("OraCons", "oraConsegnaRichiesta");
			variabili.addString("TassMitt", "flagTassazioneTariffaMittente");
			variabili.addDouble("ValoreMerce", "valoreMerceDichiarato");
			variabili.addString("ValutaMerce", "divisaValoreMerceDichiarato");
			variabili.addString("PartCons", "gestioneParticolaritàConsegna");
			variabili.addString("PartGia", "gestioneParticolaritàGiacenze");
			variabili.addString("PartVarie", "gestioneParticolaritàVarie");
			variabili.addString("Part1", "primaConsegnaParticolare");
			variabili.addString("Part2", "secondaConsegnaParticolare");
			variabili.addInt("Bancali", "bancali");
			variabili.addInt("idCorriere", "corriere");
			//variabili.addString("Stato", "stato");
			variabili.add(new Column("MittenteAlfa", Type.STRING, "MittenteAlfaLike", Compare.LIKE));
			variabili.addString("NrLista", "NrLista");
			variabili.addInt("Pezzi", "pezzi");
			variabili.add(new Column("RagSocDest", Type.STRING, "ragioneSocialeLike", Compare.LIKE));
			variabili.addString("Servizio", "servizio");
			variabili.addDate("DataGenerazione", "dataGenerazione");
			variabili.addInt("Trasmesso", "trasmesso");
		}
		return variabili;
	}

}
