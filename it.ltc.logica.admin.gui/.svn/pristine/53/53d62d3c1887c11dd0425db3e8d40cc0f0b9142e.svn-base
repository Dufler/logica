
package it.ltc.logica.admin.gui.parts;

import javax.annotation.PostConstruct;
import javax.inject.Inject;

import org.eclipse.jface.dialogs.IInputValidator;
import org.eclipse.jface.dialogs.InputDialog;
import org.eclipse.jface.viewers.ColumnLabelProvider;
import org.eclipse.jface.viewers.TreeViewer;
import org.eclipse.jface.viewers.TreeViewerColumn;
import org.eclipse.jface.window.Window;
import org.eclipse.swt.SWT;
import org.eclipse.swt.layout.GridData;
import org.eclipse.swt.layout.GridLayout;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Event;
import org.eclipse.swt.widgets.Label;
import org.eclipse.swt.widgets.Listener;
import org.eclipse.swt.widgets.Menu;
import org.eclipse.swt.widgets.MenuItem;
import org.eclipse.swt.widgets.Tree;
import org.eclipse.swt.widgets.TreeColumn;
import org.eclipse.swt.widgets.TreeItem;
import org.eclipse.wb.swt.SWTResourceManager;

import it.ltc.logica.admin.gui.logic.PermessiContentProvider;
import it.ltc.logica.database.model.centrale.Permesso;

public class PermessiPart {

	public static final String partID = "it.ltc.logica.admin.gui.part.permessi";

	private TreeViewer treeViewer;
	private Tree treePermessi;
	
	//private final ControllerUtenti controller;
	private final IInputValidator nameValidator;

	@Inject
	public PermessiPart() {
		//controller = ControllerUtenti.getInstance();
		nameValidator = new IInputValidator() {
			@Override
			public String isValid(String newText) {
				String error = null;
				if (newText == null || newText.isEmpty())
					error = "Inserisci un nome per il permesso";
				return error;
			}
		};
	}

	@PostConstruct
	public void postConstruct(Composite parent) {
		parent.setLayout(new GridLayout(1, false));

		Label lblPermessi = new Label(parent, SWT.NONE);
		lblPermessi.setFont(SWTResourceManager.getFont("Segoe UI", 16, SWT.BOLD));
		lblPermessi.setText("Permessi");

		treeViewer = new TreeViewer(parent, SWT.BORDER);
		treeViewer.setContentProvider(new PermessiContentProvider());
		treePermessi = treeViewer.getTree();
		treePermessi.setLinesVisible(true);
		treePermessi.setHeaderVisible(true);
		treePermessi.setLayoutData(new GridData(SWT.FILL, SWT.FILL, true, true, 1, 1));

		// Menu
		Menu menu = new Menu(treePermessi);
		MenuItem add = new MenuItem(menu, SWT.PUSH);
		add.setText("Aggiungi");
		add.addListener(SWT.Selection, new Listener() {
			public void handleEvent(Event event) {
				aggiungiPermesso();
			}
		});
		treePermessi.setMenu(menu);

		TreeViewerColumn colonnaNome = new TreeViewerColumn(treeViewer, SWT.NONE);
		colonnaNome.setLabelProvider(new ColumnLabelProvider() {
			@Override
			public String getText(Object element) {
				Permesso permesso = (Permesso) element;
				return permesso.getNome();
			}
		});
		TreeColumn trclmnPermesso = colonnaNome.getColumn();
		trclmnPermesso.setWidth(200);
		trclmnPermesso.setText("Permesso");

		TreeViewerColumn colonnaID = new TreeViewerColumn(treeViewer, SWT.NONE);
		colonnaID.setLabelProvider(new ColumnLabelProvider() {
			@Override
			public String getText(Object element) {
				Permesso permesso = (Permesso) element;
				return permesso.getId().toString();
			}
		});
		TreeColumn trclmnId = colonnaID.getColumn();
		trclmnId.setWidth(50);
		trclmnId.setText("ID");

		treeViewer.setInput(Permesso.getPermessiAdAlbero());

	}

	private void aggiungiPermesso() {
		TreeItem[] selection = treePermessi.getSelection();
		if (selection.length == 1) {
			Permesso padre = (Permesso) selection[0].getData();
			InputDialog dialog = new InputDialog(null, "Nuovo Permesso", "Inserisci il nome del nuovo permesso.", "", nameValidator);
			if (dialog.open() == Window.OK) {
				String nomePermesso = dialog.getValue();
				boolean inserimento = Permesso.aggiungiPermesso(padre, nomePermesso);
				if (inserimento) {
					treeViewer.refresh();
				}
			}
		}
	}

}