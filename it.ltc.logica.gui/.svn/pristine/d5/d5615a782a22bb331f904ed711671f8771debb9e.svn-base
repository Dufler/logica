package it.ltc.logica.gui.input;

import org.eclipse.swt.widgets.Composite;

public class TextForString extends TextField<String> {
	
	public static final String REGEX_PIVA = "^\\d+(\\.\\d{1,2})?";
	public static final String REGEX_TELEFONO = "^\\d+((\\.|-)\\d+)*";
	public static final String REGEX_EMAIL = "^[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?"; //"^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,6}";
	
	public TextForString(Composite parent, int style) {
		super(parent, style);
		setRegex(null);
	}

	/**
	 * Costruisce la textfield specificando una regex con cui validare il contenuto.
	 * @param parent il contenitore padre della textfield
	 * @param style lo stille da applicarvi (SWT.MULTI per multilinea)
	 * @param regex la regex con cui validare il contenuto immesso dall'utente.
	 */
	public TextForString(Composite parent, int style, String regex) {
		super(parent, style);
		setRegex(regex);
	}

	@Override
	public String getValue() {
		return getText();
	}

	@Override
	public void setValue(String value) {
		setText(value);
		resetDirty();
	}
	
	@Override
	public void setText(String value) {
		super.setText(value != null ? value : "");
		resetDirty();
	}
	
	@Override
	protected void setDefaultRequiredMessage() {
		requiredDecoration.setDescriptionText(TextField.DEAFULT_REQUIRED_MESSAGE);		
	}

	@Override
	protected void setDefaultErrorMessage() {
		wrongDecoration.setDescriptionText(TextField.DEFAULT_ERROR_MESSAGE); //TODO - Cambiare il messaggio in base al tipo di regex scelta.
	}
	
}
