package it.ltc.logica.utilities.excel.model.csv;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

public class FileCSV {
	
	public static final String separator = ",";
	
	protected String[] colonne;
	protected final List<RigaCSV> righe;
	
	public FileCSV(String[] nomiColonne) {
		colonne = nomiColonne.clone();
		righe = new ArrayList<RigaCSV>();
	}
	
	public FileCSV(File fileCSV) {
		righe = new ArrayList<RigaCSV>();
		try {
			FileReader fis = new FileReader(fileCSV);
			BufferedReader reader = new BufferedReader(fis);
			String line = reader.readLine();
			if (line != null) {
				colonne = line.split(separator);
				line = reader.readLine();
				while (line != null) {
					RigaCSV riga = leggiRiga(line);
					righe.add(riga);
					line = reader.readLine();
				}
			}
			reader.close();
		} catch (IOException e) {
			colonne = null;
		}
	}
	
	public FileCSV(File fileCSV, String separator) {
		righe = new ArrayList<RigaCSV>();
		try {
			FileReader fis = new FileReader(fileCSV);
			BufferedReader reader = new BufferedReader(fis);
			String line = reader.readLine();
			if (line != null) {
				colonne = line.split(separator);
				line = reader.readLine();
				while (line != null) {
					RigaCSV riga = leggiRiga(line);
					righe.add(riga);
					line = reader.readLine();
				}
			}
			reader.close();
		} catch (IOException e) {
			colonne = null;
		}
	}
	
	public String[] getColonne() {
		return colonne;
	}
	
	/**
	 * Restituisce l'indice della prima colonna trovata che si chiama come l'argomento.
	 * Maiuscole o minuscole sono indifferenti.
	 * @param nomeColonna il nome della colonna da cercare.
	 * @return l'indice della colonna oppure -1 se non ne esiste una con quel nome.
	 */
	public int getIndiceColonna(String nomeColonna) {
		int columnIndex = -1;
		if (nomeColonna != null) //null check
		for (int index = 0; index < colonne.length; index++) {
			if (colonne[index].equalsIgnoreCase(nomeColonna)) {
				columnIndex = index;
				break;
			}
		}
		return columnIndex;
	}
	
	public List<RigaCSV> getRighe() {
		return righe;
	}
	
	public void aggiungiRiga(RigaCSV riga) {
		righe.add(riga);
	}
	
	protected RigaCSV leggiRiga(String riga) {
		return null;
	}

}
