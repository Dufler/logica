package it.ltc.logica.common.controller;

import java.util.Collection;
import java.util.HashMap;
import java.util.List;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;

import it.ltc.logica.database.model.centrale.Commessa;
import it.ltc.logica.database.wsconsumer.WSAnswer;
import it.ltc.logica.database.wsconsumer.WSConsumer;
import it.ltc.logica.gui.task.DialogProgresso;
import it.ltc.logica.gui.task.Processo;

/**
 * Controller adibito alla gestione delle commesse.
 * @author Damiano Bellucci - damiano.bellucci@gmail.com
 *
 */
public class ControllerCommesse {
	
	private static ControllerCommesse instance;
	
	private HashMap<Integer, Commessa> commesse;

	private ControllerCommesse() {
		commesse = new HashMap<Integer, Commessa>();
		caricaDati();
	}

	public static ControllerCommesse getInstance() {
		if (instance == null) {
			instance = new ControllerCommesse();
		}
		return instance;
	}
	
	public Commessa getCommessa(int idCommessa) {
		return commesse.get(idCommessa);
	}
	
	public Collection<Commessa> getCommesse() {
		return commesse.values();
	}
	
	/**
	 * Forza il sistema a ricaricare i dati sulle commesse.
	 */
	public synchronized void caricaDati() {
		ProcessoCaricamentoCommesse pcc = new ProcessoCaricamentoCommesse();
		DialogProgresso dialog = new DialogProgresso(DialogProgresso.TITOLO_DEFAULT);
		dialog.esegui(pcc);
	}
	
	private class ProcessoCaricamentoCommesse extends Processo {

		private static final String title = "Caricamento commesse";
		
		public ProcessoCaricamentoCommesse() {
			super(title, -1);
		}

		@Override
		public void eseguiOperazioni() throws Exception {
			// Chiamata al WS
			WSConsumer c = WSConsumer.getInstance();
			WSAnswer wsAnswer = c.get("commessa");
			String answer = wsAnswer.getMessage();
			// Carico tutto quello che trovo
			ObjectMapper mapper = new ObjectMapper();
			List<Commessa> lista = mapper.readValue(answer, new TypeReference<List<Commessa>>() {});
			//Ripulisco i dati e inserisco i nuovi
			commesse.clear();
			for (Commessa commessa : lista) {
				commesse.put(commessa.getId(), commessa);
			}			
		}
		
	}

}
