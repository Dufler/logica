package it.ltc.logica.common.controller.sistema;

import java.util.Collection;
import java.util.HashMap;

import it.ltc.logica.common.controller.processi.ProcessoCaricamentoDati;
import it.ltc.logica.database.model.centrale.CategoriaMerceologica;
import it.ltc.logica.gui.task.DialogProgresso;

public class ControllerCategorieMerceologiche {
	
	private static ControllerCategorieMerceologiche instance;
	
	private final HashMap<String, CategoriaMerceologica> categorie;

	private ControllerCategorieMerceologiche() {
		categorie = new HashMap<String, CategoriaMerceologica>();
		caricaDati();
	}

	public static ControllerCategorieMerceologiche getInstance() {
		if (instance == null) {
			instance = new ControllerCategorieMerceologiche();
		}
		return instance;
	}
	
	public CategoriaMerceologica getCategoria(String nome) {
		return categorie.get(nome);
	}
	
	public Collection<CategoriaMerceologica> getCategorie() {
		return categorie.values();
	}
	
	/**
	 * Forza il sistema a ricaricare i dati sulle commesse.
	 */
	public synchronized void caricaDati() {
		ProcessoCaricamentoCategorie pcc = new ProcessoCaricamentoCategorie();
		DialogProgresso dialog = new DialogProgresso(DialogProgresso.TITOLO_DEFAULT);
		dialog.esegui(pcc);
		if (pcc.getEsito()) {
			categorie.clear();
			for (CategoriaMerceologica categoria : pcc.getLista()) {
				categorie.put(categoria.getNome(), categoria);
			}
		}
	}
	
	private class ProcessoCaricamentoCategorie extends ProcessoCaricamentoDati<CategoriaMerceologica> {

		private static final String title = "Caricamento categorie merceologiche";
		private static final String resource = "categoriamerceologica";
		
		public ProcessoCaricamentoCategorie() {
			super(title, resource, CategoriaMerceologica.class);
		}
		
	}

}
