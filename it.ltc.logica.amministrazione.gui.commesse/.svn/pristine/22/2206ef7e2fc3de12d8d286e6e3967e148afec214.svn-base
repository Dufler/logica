package it.ltc.logica.amministrazione.gui.commesse.elements.preferenze;

import org.eclipse.jface.dialogs.Dialog;
import org.eclipse.swt.SWT;
import org.eclipse.swt.events.MouseAdapter;
import org.eclipse.swt.events.MouseEvent;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Event;
import org.eclipse.swt.widgets.Listener;
import org.eclipse.swt.widgets.Menu;
import org.eclipse.swt.widgets.MenuItem;

import it.ltc.logica.amministrazione.gui.commesse.dialogs.DialogPreferenzeFatturazione;
import it.ltc.logica.database.model.centrale.fatturazione.PreferenzeFatturazione;
import it.ltc.logica.gui.elements.Tabella;

public class TabellaPreferenzeFatturazione extends Tabella<PreferenzeFatturazione> {

	public TabellaPreferenzeFatturazione(Composite parent) {
		super(parent, STILE_SELEZIONE_SINGOLA, new OrdinatorePreferenzeFatturazione());
		
		aggiungiColonna("Ambito", 120, new EtichettatorePreferenzeFatturazione(), 0);
	}

	@Override
	protected void setFiltro() {
		//DO NOTHING!		
	}

	@Override
	protected void aggiungiListener() {
		table.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseDoubleClick(MouseEvent e) {
				apriDialogModifica();
			}
		});
	}

	@Override
	protected void aggiungiMenu(Menu menu) {
		MenuItem insert = new MenuItem(menu, SWT.PUSH);
		insert.setText("Nuovo");
		insert.addListener(SWT.Selection, new Listener() {
	    	public void handleEvent(Event event) {
	    		apriDialogInserimento();
	    	}
	    });
		MenuItem modify = new MenuItem(menu, SWT.PUSH);
	    modify.setText("Modifica");
	    modify.addListener(SWT.Selection, new Listener() {
	    	public void handleEvent(Event event) {
	    		apriDialogModifica();
	    	}
	    }); 
	}
	
	private void apriDialogInserimento() {
		PreferenzeFatturazione preferenze = new PreferenzeFatturazione();
		preferenze.setAmbito(1);
		preferenze.setCommessa(1);
		DialogPreferenzeFatturazione dialog = new DialogPreferenzeFatturazione(preferenze, true);
		int returnCode = dialog.open();
		if (returnCode == Dialog.OK) {
			//Aggiorna
		}
	}

	private void apriDialogModifica() {
		PreferenzeFatturazione preferenze = getRigaSelezionata();
		if (preferenze != null) {
			DialogPreferenzeFatturazione dialog = new DialogPreferenzeFatturazione(preferenze, false);
			int returnCode = dialog.open();
			if (returnCode == Dialog.OK) {
				//Aggiorna
			}
		}
	}

}
