package it.ltc.logica.trasporti.calcolo.ambiti;

import it.ltc.logica.trasporti.calcolo.algoritmi.AlgoritmoPercentuale;
import it.ltc.logica.trasporti.calcolo.algoritmi.IAlgoritmo;
import it.ltc.logica.trasporti.calcolo.algoritmi.SpedizioneModel;

public class Istat implements IAmbito {
	
	public static final String CODICE = "ISTAT";
	private static Istat instance;
	
	private Istat() {}
	
	public static Istat getInstance() {
		if (instance == null) {
			instance = new Istat();
		}
		return instance;
	}

	@Override
	public boolean isApplicabile(SpedizioneModel spedizione) {
		return true;
	}

	@Override
	public double getValore(SpedizioneModel spedizione, IAlgoritmo algoritmo) {
		double valore;
		String tipoAlgoritmo = algoritmo.getNome();
		switch (tipoAlgoritmo) {
			case AlgoritmoPercentuale.NOME : valore = getValorePercentuale(spedizione, algoritmo); break;
			default : valore = 0; 
		}
		return valore;
	}
	
	private double getValorePercentuale(SpedizioneModel spedizione, IAlgoritmo algoritmo) {
		double valore;
		AlgoritmoPercentuale ap = (AlgoritmoPercentuale) algoritmo;
		String scopo = ap.getScopo();
		switch (scopo) {
			case AlgoritmoPercentuale.SCOPO_COSTO : valore = spedizione.getCostoTotalePerCosto(); break;
			case AlgoritmoPercentuale.SCOPO_RICAVO : valore = spedizione.getCostoTotalePerRicavo(); break;
			default : valore = 0;
		}
		return valore;
	}

}
