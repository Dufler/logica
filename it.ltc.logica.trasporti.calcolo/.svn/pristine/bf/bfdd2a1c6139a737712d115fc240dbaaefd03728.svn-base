package it.ltc.logica.trasporti.calcolo.ambiti;

import it.ltc.logica.database.model.centrale.fatturazione.SottoAmbitoFattura;
import it.ltc.logica.trasporti.calcolo.algoritmi.SpedizioneModel;

public class GiacenzaReso extends IAmbitoTrasporto {
	
	public GiacenzaReso(SottoAmbitoFattura ambito) {
		super(ambito);
	}

	public static final String CODICE = "GIACENZA_RESO";
	public static final int ID = 15;

	@Override
	public boolean isApplicabile(SpedizioneModel spedizione) {
		int idDestinatario = spedizione.getDestinazione().getId();
		int idDestinatarioGiacenza = spedizione.getGiacenza().getIdDestinatario();
		boolean applicabile = (idDestinatario != idDestinatarioGiacenza);
		return applicabile;
	}

//	@Override
//	public double getValore(SpedizioneModel spedizione, MVoceDiListino<SpedizioneModel> voce) {
//		double valore = 0;
//		IAlgoritmo algoritmo = voce.getAlgoritmo();
//		TipoAlgoritmo tipoAlgoritmo = algoritmo.getTipoAlgoritmo();
//		switch (tipoAlgoritmo) {
//			case FISSO : valore = 1; break;
//			//case PERCENTUALE : getValorePercentuale(spedizione, algoritmo); break;
//			case PROPORZIONALE : valore = getValoreProporzionale(spedizione, algoritmo); break;
//			case SCAGLIONI : valore = getValoreScaglioni(spedizione, algoritmo); break;
//			case SCAGLIONI_RIPETUTI : valore = getValoreScaglioniRipetuti(spedizione, algoritmo); break;
//			default : valore = 0;
//		}
//		return valore;
//	}
	
	@Override
	public Tipo getTipo() {
		return Tipo.GIACENZA;
	}

}
