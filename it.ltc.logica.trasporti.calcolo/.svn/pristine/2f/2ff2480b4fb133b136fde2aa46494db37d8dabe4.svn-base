package it.ltc.logica.trasporti.calcolo.ambiti.giacenza;

import it.ltc.logica.database.model.centrale.fatturazione.SottoAmbitoFattura;
import it.ltc.logica.database.model.centrale.indirizzi.Indirizzo;
import it.ltc.logica.trasporti.calcolo.algoritmi.SpedizioneModel;
import it.ltc.logica.trasporti.calcolo.ambiti.common.NoloSud;

public class GiacenzaRiconsegnaSud extends NoloSud {

	public static final int ID = 65;
	
	private static GiacenzaRiconsegnaSud instance;

	private GiacenzaRiconsegnaSud(SottoAmbitoFattura ambito) {
		super(ambito);
	}

	public static GiacenzaRiconsegnaSud getInstance(SottoAmbitoFattura ambito) {
		if (instance == null) {
			instance = new GiacenzaRiconsegnaSud(ambito);
		}
		return instance;
	}

	@Override
	public boolean isApplicabile(SpedizioneModel spedizione) {
		boolean applicabile = super.isApplicabile(spedizione);
		if (applicabile) {
			Indirizzo destinatarioOriginale = spedizione.getDestinazione();
			Indirizzo destinatarioGiacenza = spedizione.getDestinatarioGiacenza();
			if (destinatarioOriginale != null && destinatarioGiacenza != null) {
				applicabile = destinatarioOriginale.equals(destinatarioGiacenza);
			} else {
				applicabile = false;
			}
		}
		return applicabile;
	}
	
	@Override
	public Tipo getTipo() {
		return Tipo.GIACENZA;
	}
	
}
