package it.ltc.logica.trasporti.calcolo.ambiti;

import java.util.ArrayList;
import java.util.List;

import it.ltc.logica.database.model.centrale.Indirizzo;
import it.ltc.logica.database.model.centrale.fatturazione.SottoAmbitoFattura;
import it.ltc.logica.trasporti.calcolo.algoritmi.SpedizioneModel;

public class SupplementoElba extends IAmbitoTrasporto {

	public SupplementoElba(SottoAmbitoFattura ambito) {
		super(ambito);
	}

	private static final List<String> listaCap = new ArrayList<String>();
	
	public static final String CODICE = "NOLO_ELBA";

	public static final int ID = 23;

	@Override
	public boolean isApplicabile(SpedizioneModel spedizione) {
		Indirizzo destinazione = spedizione.getDestinazione();
		boolean applicabile = getListaCapIsoleMinori().contains(destinazione.getCap());
		return applicabile;
	}

//	@Override
//	public double getValore(SpedizioneModel spedizione, MVoceDiListino<SpedizioneModel> voce) {
//		double valore = 0;
//		if (isApplicabile(spedizione))
//			valore += 1;
//		return valore;
//	}
	
	public static List<String> getListaCapIsoleMinori() {
		if (listaCap.isEmpty()) {
			//TODO - Aggiungi i cap richiesti
			//listaCap.add("");
		}
		return listaCap;
	}
	
	@Override
	public Tipo getTipo() {
		return Tipo.NOLO_EXTRA;
	}

}
