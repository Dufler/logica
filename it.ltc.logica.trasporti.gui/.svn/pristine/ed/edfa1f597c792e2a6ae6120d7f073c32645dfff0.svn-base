package it.ltc.logica.trasporti.gui.elements.spedizionemodel;

import java.util.Date;

import it.ltc.logica.database.model.centrale.Indirizzo;
import it.ltc.logica.database.model.centrale.Spedizione;
import it.ltc.logica.gui.elements.Ordinatore;
import it.ltc.logica.trasporti.calcolo.algoritmi.SpedizioneModel;
import it.ltc.logica.trasporti.controller.SpedizioniController;

public class OrdinatoreSpedizioniModel extends Ordinatore<SpedizioneModel> {

	private final SpedizioniController controllerSpedizioni;
	
	public OrdinatoreSpedizioniModel() {
		controllerSpedizioni = SpedizioniController.getInstance();
	}
	
	@Override
	protected int compare(SpedizioneModel t1, SpedizioneModel t2, int property) {
		int compare;
		switch (property) {
			case 0 : compare = ordinaPerData(t1.getSpedizione(), t2.getSpedizione()); break;
			case 1 : compare = ordinaPerDestinatario(t1.getSpedizione(), t2.getSpedizione()); break;
			case 2 : compare = ordinaPerLocalita(t1.getSpedizione(), t2.getSpedizione()); break;
			case 3 : compare = ordinaPerRiferimento(t1.getSpedizione(), t2.getSpedizione()); break;
			default : compare = 0;
		}
		return compare;
	}
	
	private int ordinaPerRiferimento(Spedizione t1, Spedizione t2) {
		int compare;
		String r1 = t1.getRiferimentoCliente();
		String r2 = t2.getRiferimentoCliente();
		if (r1 != null) {
			if (r2 != null)
				compare = r1.compareTo(r2);
			else
				compare = 1;
		} else if (r2 != null) {
			compare = -1;
		} else {
			compare = 0;
		}
		return compare;
	}
	
	private int ordinaPerDestinatario(Spedizione t1, Spedizione t2) {
		int compare;
		String r1 = getDestinatario(t1);
		String r2 = getDestinatario(t2);
		if (r1 != null) {
			if (r2 != null)
				compare = r1.compareTo(r2);
			else
				compare = 1;
		} else if (r2 != null) {
			compare = -1;
		} else {
			compare = 0;
		}
		return compare;
	}
	
	private int ordinaPerLocalita(Spedizione t1, Spedizione t2) {
		int compare;
		String r1 = getLocalita(t1);
		String r2 = getLocalita(t2);
		if (r1 != null) {
			if (r2 != null)
				compare = r1.compareTo(r2);
			else
				compare = 1;
		} else if (r2 != null) {
			compare = -1;
		} else {
			compare = 0;
		}
		return compare;
	}

	private int ordinaPerData(Spedizione t1, Spedizione t2) {
		Date d1 = t1.getData();
		Date d2 = t2.getData();
		int order;
		if (d1 == null) {
			if (d2 == null) {
				order = 0;
			} else {
				order = -1;
			}
		} else {
			if (d2 == null) {
				order = 1;
			} else {
				order = d1.compareTo(d2);
			}
		}
		return order * -1;
	}
	
	public String getDestinatario(Spedizione spedizione) {
		Integer idDestinatario = spedizione.getIdIndirizzoDestinazione();
		Indirizzo destinatario = controllerSpedizioni.getIndirizzo(idDestinatario);
		String ragioneSociale = destinatario.getRagioneSociale();
		return ragioneSociale;
	}
	
	public String getLocalita(Spedizione spedizione) {
		Integer idDestinatario = spedizione.getIdIndirizzoDestinazione();
		Indirizzo destinatario = controllerSpedizioni.getIndirizzo(idDestinatario);
		String localita = destinatario.getLocalita();
		String provincia = destinatario.getProvincia();
		if (provincia != null && !provincia.isEmpty() && !"XX".equalsIgnoreCase(provincia))
			localita += " (" + provincia + ")";
		return localita;
	}

}
