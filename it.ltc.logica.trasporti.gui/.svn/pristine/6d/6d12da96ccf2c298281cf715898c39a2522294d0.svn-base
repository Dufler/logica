package it.ltc.logica.trasporti.gui.elements.cap;

import java.util.List;

import org.eclipse.jface.dialogs.Dialog;
import org.eclipse.jface.viewers.ArrayContentProvider;
import org.eclipse.jface.viewers.TableViewer;
import org.eclipse.jface.viewers.TableViewerColumn;
import org.eclipse.swt.SWT;
import org.eclipse.swt.events.MouseAdapter;
import org.eclipse.swt.events.MouseEvent;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Table;
import org.eclipse.swt.widgets.TableColumn;
import org.eclipse.swt.widgets.TableItem;

import it.ltc.logica.database.model.centrale.Cap;

public class CapTableViewer extends TableViewer {
	
	private Table table;
	
	private TableViewerColumn colonnaCap;
	private TableViewerColumn colonnaLocalita;
	private TableViewerColumn colonnaDisagiate;
	private TableViewerColumn colonnaOre10;
	private TableViewerColumn colonnaOre12;
	private TableViewerColumn colonnaIsole;
	
	private CapComparator comparator;
	private FiltroCAP filter;

	public CapTableViewer(Composite parent) {
		super(parent, SWT.BORDER | SWT.FULL_SELECTION | SWT.VIRTUAL);
		setContentProvider(ArrayContentProvider.getInstance());
		setOrdinamento();
		setFiltro();
		table = getTable();
		table.setLinesVisible(true);
		table.setHeaderVisible(true);
		aggiungiColonne();
		aggiungiListener();
	}
	
	private void aggiungiColonne() {		
		colonnaCap = new TableViewerColumn(this, SWT.NONE);
		colonnaCap.setLabelProvider(new CapLabelProvider());
		
		TableColumn tblclmnCap = colonnaCap.getColumn();
		tblclmnCap.setWidth(80);
		tblclmnCap.setText("CAP");
		
		colonnaLocalita = new TableViewerColumn(this, SWT.NONE);
		colonnaLocalita.setLabelProvider(new LocalitaLabelProvider());
		
		TableColumn tblclmnLocalita = colonnaLocalita.getColumn();
		tblclmnLocalita.setWidth(250);
		tblclmnLocalita.setText("Localit\u00E0");
		
		colonnaOre10 = new TableViewerColumn(this, SWT.NONE);
		colonnaOre10.setLabelProvider(new Ore10LabelProvider());
		
		TableColumn tblclmnOre10 = colonnaOre10.getColumn();
		tblclmnOre10.setWidth(50);
		tblclmnOre10.setText("Ore 10");
		tblclmnOre10.setAlignment(SWT.CENTER);
		
		colonnaOre12 = new TableViewerColumn(this, SWT.NONE);
		colonnaOre12.setLabelProvider(new Ore12LabelProvider());
		
		TableColumn tblclmnOre12 = colonnaOre12.getColumn();
		tblclmnOre12.setWidth(50);
		tblclmnOre12.setText("Ore 12");
		tblclmnOre12.setAlignment(SWT.CENTER);
		
		colonnaDisagiate = new TableViewerColumn(this, SWT.NONE);
		colonnaDisagiate.setLabelProvider(new DisagiateLabelProvider());
		
		TableColumn tblclmnDisagiata = colonnaDisagiate.getColumn();
		tblclmnDisagiata.setWidth(80);
		tblclmnDisagiata.setText("Disagiata");
		tblclmnDisagiata.setAlignment(SWT.CENTER);
		
		colonnaIsole = new TableViewerColumn(this, SWT.NONE);
		colonnaIsole.setLabelProvider(new IsoleLabelProvider());
		
		TableColumn tblclmnIsolaMinore = colonnaIsole.getColumn();
		tblclmnIsolaMinore.setWidth(80);
		tblclmnIsolaMinore.setText("Isola Minore");
		tblclmnIsolaMinore.setAlignment(SWT.CENTER);
	}
	
	private void setOrdinamento() {
		comparator = new CapComparator();
		setComparator(comparator);
	}
	
	private void setFiltro() {
		filter = new FiltroCAP();
		setFilters(filter);
	}

	private void aggiungiListener() {
		table.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseDoubleClick(MouseEvent e) {
				apriDialogModificaCap();
			}
		});
	}
	
	private void apriDialogModificaCap() {
		int selectionIndex = table.getSelectionIndex();
		if (selectionIndex != -1) {
			TableItem selectedItem = table.getItem(selectionIndex);
			Cap cap = (Cap) selectedItem.getData();
			DialogCap dialog = new DialogCap(cap);
			int esito = dialog.open();
			if (esito == Dialog.OK) {
				refresh();
			}
		}
		
	}
	
	public void mostraCap(List<Cap> input) {
		setInput(input);
//		for (TableColumn column : table.getColumns()) {
//			column.pack();
//		}
	}
	
	public void filtra(String cap, String localita) {
		filter.setCap(cap);
		filter.setLocalita(localita);
		refresh();
	}

}
